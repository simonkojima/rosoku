
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/example_within-subject-classification-deeplearning.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_example_within-subject-classification-deeplearning.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_example_within-subject-classification-deeplearning.py:


Example: Within-subject classification with deep learning
=========================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-23

.. code-block:: Python

    import random
    import functools
    import numpy as np
    import matplotlib.pyplot as plt

    from pathlib import Path

    import mne
    import tag_mne as tm

    import moabb.datasets

    import torch
    import braindecode
    import rosoku








.. GENERATED FROM PYTHON SOURCE LINES 24-45

.. code-block:: Python


    subject = 56
    resample = 128

    lr = 1e-3
    weight_decay = 1e-2
    n_epochs = 500
    batch_size = 8
    patience = 75
    enable_euclidean_alignment = False
    enable_normalization = True
    device = "cuda" if torch.cuda.is_available() else "cpu"
    enable_ddp = False
    enable_dp = False

    seed = 42

    save_base = Path("~").expanduser() / "rosoku-log"
    (save_base / "checkpoint").mkdir(parents=True, exist_ok=True)
    (save_base / "history").mkdir(parents=True, exist_ok=True)








.. GENERATED FROM PYTHON SOURCE LINES 46-134

.. code-block:: Python


    # load dataset and generate epochs


    def epochs_from_raws(
        raws, runs, rtypes, tmin, tmax, l_freq, h_freq, order_filter, subject
    ):
        epochs_list = list()
        for raw, run, rtype in zip(raws, runs, rtypes):

            raw.filter(
                l_freq=l_freq,
                h_freq=h_freq,
                method="iir",
                iir_params={"ftype": "butter", "order": 4, "btype": "bandpass"},
            )

            # eog and emg mapping
            mapping = dict()
            for ch in raw.ch_names:
                if "EOG" in ch:
                    mapping[ch] = "eog"
                elif "EMG" in ch:
                    mapping[ch] = "emg"

            raw.set_channel_types(mapping)
            raw.set_montage("standard_1020")

            events, event_id = mne.events_from_annotations(raw)

            samples, markers = tm.markers_from_events(events, event_id)
            markers = tm.add_tag(markers, f"subject:{subject}")
            markers = tm.add_event_names(
                markers, {"left": ["left_hand"], "right": ["right_hand"]}
            )
            markers = tm.add_tag(markers, f"run:{run}")
            markers = tm.add_tag(markers, f"rtype:{rtype}")

            samples, markers = tm.remove(samples, markers, "event:misc")

            events, event_id = tm.events_from_markers(samples, markers)
            epochs = mne.Epochs(
                raw=raw,
                tmin=tmin,
                tmax=tmax,
                events=events,
                event_id=event_id,
                baseline=None,
            )

            epochs_list.append(epochs)

        epochs = tm.concatenate_epochs(epochs_list)

        return epochs


    dataset = moabb.datasets.Dreyer2023()
    sessions = dataset.get_data(subjects=[subject])
    raws = sessions[subject]["0"]

    epochs_acquisition = epochs_from_raws(
        raws=[raws[key] for key in ["0R1acquisition", "1R2acquisition"]],
        runs=[1, 2],
        rtypes=["acquisition", "acquisition"],
        tmin=-1.0,
        tmax=5.5,
        l_freq=8.0,
        h_freq=30.0,
        order_filter=4,
        subject=subject,
    ).resample(resample)

    epochs_online = epochs_from_raws(
        raws=[raws[key] for key in ["2R3online", "3R4online", "4R5online"]],
        runs=[3, 4, 5],
        rtypes=["online", "online", "online"],
        tmin=-1.0,
        tmax=5.5,
        l_freq=8.0,
        h_freq=30.0,
        order_filter=4,
        subject=subject,
    ).resample(resample)

    epochs = tm.concatenate_epochs([epochs_acquisition, epochs_online])






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    0it [00:00, ?it/s]    9it [00:00, 24120.60it/s]
    Reading 0 ... 230911  =      0.000 ...   450.998 secs...
    Reading 0 ... 230911  =      0.000 ...   450.998 secs...
    Reading 0 ... 230911  =      0.000 ...   450.998 secs...
    Reading 0 ... 230911  =      0.000 ...   450.998 secs...
    Reading 0 ... 230911  =      0.000 ...   450.998 secs...
    No stim channel nor annotations found, skipping setting annotations.
    No stim channel nor annotations found, skipping setting annotations.
    No stim channel nor annotations found, skipping setting annotations.
    No stim channel nor annotations found, skipping setting annotations.
    No stim channel nor annotations found, skipping setting annotations.
    Filtering raw data in 1 contiguous segment
    Setting up band-pass filter from 8 - 30 Hz

    IIR filter parameters
    ---------------------
    Butterworth bandpass zero-phase (two-pass forward and reverse) non-causal filter:
    - Filter order 16 (effective, after forward-backward)
    - Cutoffs at 8.00, 30.00 Hz: -6.02, -6.02 dB

    Used Annotations descriptions: [np.str_('1010'), np.str_('32769'), np.str_('32770'), np.str_('33281'), np.str_('33282'), np.str_('768'), np.str_('781'), np.str_('786'), np.str_('800'), np.str_('left_hand'), np.str_('right_hand')]
    Not setting metadata
    40 matching events found
    No baseline correction applied
    0 projection items activated
    Filtering raw data in 1 contiguous segment
    Setting up band-pass filter from 8 - 30 Hz

    IIR filter parameters
    ---------------------
    Butterworth bandpass zero-phase (two-pass forward and reverse) non-causal filter:
    - Filter order 16 (effective, after forward-backward)
    - Cutoffs at 8.00, 30.00 Hz: -6.02, -6.02 dB

    Used Annotations descriptions: [np.str_('1010'), np.str_('32769'), np.str_('32770'), np.str_('33281'), np.str_('33282'), np.str_('768'), np.str_('781'), np.str_('786'), np.str_('800'), np.str_('left_hand'), np.str_('right_hand')]
    Not setting metadata
    40 matching events found
    No baseline correction applied
    0 projection items activated
    /home/skojima/miniconda3/envs/sphinx/lib/python3.11/site-packages/tag_mne/mne_utils.py:14: RuntimeWarning: Concatenation of Annotations within Epochs is not supported yet. All annotations will be dropped.
      return mne.concatenate_epochs(epochs_list, add_offset)
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    0 bad epochs dropped
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    0 bad epochs dropped
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    Not setting metadata
    80 matching events found
    No baseline correction applied
    Filtering raw data in 1 contiguous segment
    Setting up band-pass filter from 8 - 30 Hz

    IIR filter parameters
    ---------------------
    Butterworth bandpass zero-phase (two-pass forward and reverse) non-causal filter:
    - Filter order 16 (effective, after forward-backward)
    - Cutoffs at 8.00, 30.00 Hz: -6.02, -6.02 dB

    Used Annotations descriptions: [np.str_('1010'), np.str_('32769'), np.str_('32770'), np.str_('33281'), np.str_('33282'), np.str_('33284'), np.str_('768'), np.str_('781'), np.str_('786'), np.str_('800'), np.str_('left_hand'), np.str_('right_hand')]
    Not setting metadata
    40 matching events found
    No baseline correction applied
    0 projection items activated
    Filtering raw data in 1 contiguous segment
    Setting up band-pass filter from 8 - 30 Hz

    IIR filter parameters
    ---------------------
    Butterworth bandpass zero-phase (two-pass forward and reverse) non-causal filter:
    - Filter order 16 (effective, after forward-backward)
    - Cutoffs at 8.00, 30.00 Hz: -6.02, -6.02 dB

    Used Annotations descriptions: [np.str_('1010'), np.str_('32769'), np.str_('32770'), np.str_('33281'), np.str_('33282'), np.str_('33284'), np.str_('768'), np.str_('781'), np.str_('786'), np.str_('800'), np.str_('left_hand'), np.str_('right_hand')]
    Not setting metadata
    40 matching events found
    No baseline correction applied
    0 projection items activated
    Filtering raw data in 1 contiguous segment
    Setting up band-pass filter from 8 - 30 Hz

    IIR filter parameters
    ---------------------
    Butterworth bandpass zero-phase (two-pass forward and reverse) non-causal filter:
    - Filter order 16 (effective, after forward-backward)
    - Cutoffs at 8.00, 30.00 Hz: -6.02, -6.02 dB

    Used Annotations descriptions: [np.str_('1010'), np.str_('32769'), np.str_('32770'), np.str_('33281'), np.str_('33282'), np.str_('33284'), np.str_('768'), np.str_('781'), np.str_('786'), np.str_('800'), np.str_('left_hand'), np.str_('right_hand')]
    Not setting metadata
    40 matching events found
    No baseline correction applied
    0 projection items activated
    /home/skojima/miniconda3/envs/sphinx/lib/python3.11/site-packages/tag_mne/mne_utils.py:14: RuntimeWarning: Concatenation of Annotations within Epochs is not supported yet. All annotations will be dropped.
      return mne.concatenate_epochs(epochs_list, add_offset)
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    0 bad epochs dropped
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    0 bad epochs dropped
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    0 bad epochs dropped
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    Using data from preloaded Raw for 40 events and 3329 original time points ...
    Not setting metadata
    120 matching events found
    No baseline correction applied
    Not setting metadata
    200 matching events found
    No baseline correction applied




.. GENERATED FROM PYTHON SOURCE LINES 135-165

.. code-block:: Python



    def func_proc_epochs(epochs, mode, tmin=0.5, tmax=4.5):
        epochs = epochs.pick(picks="eeg").crop(tmin=tmin, tmax=tmax)
        return epochs


    def func_load_epochs(keywords, mode, epochs):
        return epochs[keywords]


    def func_get_model(X, y):
        _, n_chans, n_times = X.shape
        F1 = 4
        D = 2
        F2 = F1 * D

        model = braindecode.models.EEGNetv4(
            n_chans=n_chans,
            n_outputs=2,
            n_times=n_times,
            F1=F1,
            D=D,
            F2=F2,
            drop_prob=0.5,
        )

        return model









.. GENERATED FROM PYTHON SOURCE LINES 166-205

.. code-block:: Python

    criterion = torch.nn.CrossEntropyLoss()
    scheduler = torch.optim.lr_scheduler.CosineAnnealingLR
    scheduler_params = {"T_max": n_epochs, "eta_min": 1e-6}
    optimizer = torch.optim.AdamW
    optimizer_params = {"lr": lr, "weight_decay": weight_decay}
    early_stopping = rosoku.utils.EarlyStopping(patience=patience)

    results = rosoku.deeplearning(
        keywords_train=["run:1", "run:2"],
        keywords_valid=["run:3"],
        keywords_test=["run:4"],
        func_load_epochs=functools.partial(func_load_epochs, epochs=epochs),
        apply_func_proc_per_obj=True,
        batch_size=batch_size,
        n_epochs=n_epochs,
        criterion=criterion,
        optimizer=optimizer,
        optimizer_params=optimizer_params,
        func_get_model=func_get_model,
        scheduler=scheduler,
        scheduler_params=scheduler_params,
        device=device,
        enable_ddp=enable_ddp,
        func_proc_epochs=func_proc_epochs,
        early_stopping=early_stopping,
        enable_normalization=enable_normalization,
        name_classifier="eegnet4.2",
        history_fname=(save_base / "history" / f"sub-{subject}"),
        checkpoint_fname=(save_base / "checkpoint" / f"sub-{subject}"),
        desc="eegnet4.2/drop_prob=0.25",
        enable_wandb_logging=False,
        wandb_params={
            "project": "wandb-project-name",
            "name": f"sub-{subject}",
        },
        seed=seed,
    )

    print(results.loc[0])




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    epoch 000, train_loss: 0.6928, train_acc: 0.49, valid_loss: 0.6924, valid_acc: 0.50, lr: 9.9999e-04, et: 0.4955, checkpoint saved
    epoch 001, train_loss: 0.6926, train_acc: 0.51, valid_loss: 0.6924, valid_acc: 0.50, lr: 9.9996e-04, et: 0.0321, checkpoint saved
    epoch 002, train_loss: 0.6923, train_acc: 0.54, valid_loss: 0.6923, valid_acc: 0.50, lr: 9.9991e-04, et: 0.0330, checkpoint saved
    epoch 003, train_loss: 0.6920, train_acc: 0.56, valid_loss: 0.6924, valid_acc: 0.50, lr: 9.9984e-04, et: 0.0319
    epoch 004, train_loss: 0.6915, train_acc: 0.56, valid_loss: 0.6924, valid_acc: 0.50, lr: 9.9975e-04, et: 0.0316
    epoch 005, train_loss: 0.6908, train_acc: 0.61, valid_loss: 0.6921, valid_acc: 0.50, lr: 9.9965e-04, et: 0.0327, checkpoint saved
    epoch 006, train_loss: 0.6901, train_acc: 0.59, valid_loss: 0.6920, valid_acc: 0.47, lr: 9.9952e-04, et: 0.0303, checkpoint saved
    epoch 007, train_loss: 0.6891, train_acc: 0.62, valid_loss: 0.6917, valid_acc: 0.45, lr: 9.9937e-04, et: 0.0321, checkpoint saved
    epoch 008, train_loss: 0.6879, train_acc: 0.75, valid_loss: 0.6914, valid_acc: 0.53, lr: 9.9920e-04, et: 0.0326, checkpoint saved
    epoch 009, train_loss: 0.6864, train_acc: 0.79, valid_loss: 0.6914, valid_acc: 0.50, lr: 9.9901e-04, et: 0.0361, checkpoint saved
    epoch 010, train_loss: 0.6847, train_acc: 0.79, valid_loss: 0.6908, valid_acc: 0.47, lr: 9.9881e-04, et: 0.0356, checkpoint saved
    epoch 011, train_loss: 0.6828, train_acc: 0.86, valid_loss: 0.6903, valid_acc: 0.50, lr: 9.9858e-04, et: 0.0301, checkpoint saved
    epoch 012, train_loss: 0.6800, train_acc: 0.86, valid_loss: 0.6903, valid_acc: 0.62, lr: 9.9833e-04, et: 0.0316
    epoch 013, train_loss: 0.6768, train_acc: 0.85, valid_loss: 0.6897, valid_acc: 0.62, lr: 9.9807e-04, et: 0.0301, checkpoint saved
    epoch 014, train_loss: 0.6714, train_acc: 0.90, valid_loss: 0.6879, valid_acc: 0.68, lr: 9.9778e-04, et: 0.0293, checkpoint saved
    epoch 015, train_loss: 0.6638, train_acc: 0.91, valid_loss: 0.6835, valid_acc: 0.57, lr: 9.9748e-04, et: 0.0294, checkpoint saved
    epoch 016, train_loss: 0.6538, train_acc: 0.91, valid_loss: 0.6771, valid_acc: 0.55, lr: 9.9715e-04, et: 0.0296, checkpoint saved
    epoch 017, train_loss: 0.6383, train_acc: 0.93, valid_loss: 0.6660, valid_acc: 0.62, lr: 9.9681e-04, et: 0.0291, checkpoint saved
    epoch 018, train_loss: 0.6194, train_acc: 0.88, valid_loss: 0.6522, valid_acc: 0.62, lr: 9.9644e-04, et: 0.0296, checkpoint saved
    epoch 019, train_loss: 0.5945, train_acc: 0.85, valid_loss: 0.6333, valid_acc: 0.62, lr: 9.9606e-04, et: 0.0292, checkpoint saved
    epoch 020, train_loss: 0.5651, train_acc: 0.88, valid_loss: 0.6103, valid_acc: 0.65, lr: 9.9566e-04, et: 0.0288, checkpoint saved
    epoch 021, train_loss: 0.5241, train_acc: 0.89, valid_loss: 0.5802, valid_acc: 0.68, lr: 9.9524e-04, et: 0.0292, checkpoint saved
    epoch 022, train_loss: 0.4843, train_acc: 0.85, valid_loss: 0.5538, valid_acc: 0.68, lr: 9.9479e-04, et: 0.0284, checkpoint saved
    epoch 023, train_loss: 0.4393, train_acc: 0.88, valid_loss: 0.5259, valid_acc: 0.70, lr: 9.9433e-04, et: 0.0288, checkpoint saved
    epoch 024, train_loss: 0.4150, train_acc: 0.86, valid_loss: 0.5348, valid_acc: 0.68, lr: 9.9385e-04, et: 0.0297
    epoch 025, train_loss: 0.4132, train_acc: 0.79, valid_loss: 0.5635, valid_acc: 0.65, lr: 9.9335e-04, et: 0.0311
    epoch 026, train_loss: 0.3616, train_acc: 0.88, valid_loss: 0.5232, valid_acc: 0.72, lr: 9.9283e-04, et: 0.0293, checkpoint saved
    epoch 027, train_loss: 0.2985, train_acc: 0.94, valid_loss: 0.4685, valid_acc: 0.78, lr: 9.9229e-04, et: 0.0293, checkpoint saved
    epoch 028, train_loss: 0.2749, train_acc: 0.94, valid_loss: 0.4541, valid_acc: 0.80, lr: 9.9173e-04, et: 0.0308, checkpoint saved
    epoch 029, train_loss: 0.2348, train_acc: 0.94, valid_loss: 0.4065, valid_acc: 0.85, lr: 9.9115e-04, et: 0.0290, checkpoint saved
    epoch 030, train_loss: 0.1788, train_acc: 0.96, valid_loss: 0.3426, valid_acc: 0.85, lr: 9.9055e-04, et: 0.0288, checkpoint saved
    epoch 031, train_loss: 0.1968, train_acc: 0.96, valid_loss: 0.3970, valid_acc: 0.85, lr: 9.8994e-04, et: 0.0281
    epoch 032, train_loss: 0.1778, train_acc: 0.96, valid_loss: 0.3670, valid_acc: 0.85, lr: 9.8930e-04, et: 0.0295
    epoch 033, train_loss: 0.1423, train_acc: 0.97, valid_loss: 0.3155, valid_acc: 0.88, lr: 9.8865e-04, et: 0.0301, checkpoint saved
    epoch 034, train_loss: 0.0884, train_acc: 1.00, valid_loss: 0.2156, valid_acc: 0.90, lr: 9.8797e-04, et: 0.0296, checkpoint saved
    epoch 035, train_loss: 0.0930, train_acc: 0.99, valid_loss: 0.2419, valid_acc: 0.88, lr: 9.8728e-04, et: 0.0287
    epoch 036, train_loss: 0.0916, train_acc: 0.99, valid_loss: 0.2393, valid_acc: 0.90, lr: 9.8656e-04, et: 0.0291
    epoch 037, train_loss: 0.0641, train_acc: 1.00, valid_loss: 0.1958, valid_acc: 0.93, lr: 9.8583e-04, et: 0.0312, checkpoint saved
    epoch 038, train_loss: 0.0646, train_acc: 0.99, valid_loss: 0.2310, valid_acc: 0.90, lr: 9.8508e-04, et: 0.0297
    epoch 039, train_loss: 0.0615, train_acc: 0.99, valid_loss: 0.2615, valid_acc: 0.88, lr: 9.8431e-04, et: 0.0293
    epoch 040, train_loss: 0.0546, train_acc: 0.99, valid_loss: 0.2472, valid_acc: 0.88, lr: 9.8352e-04, et: 0.0282
    epoch 041, train_loss: 0.0572, train_acc: 0.99, valid_loss: 0.2433, valid_acc: 0.88, lr: 9.8271e-04, et: 0.0306
    epoch 042, train_loss: 0.0465, train_acc: 0.99, valid_loss: 0.2220, valid_acc: 0.88, lr: 9.8188e-04, et: 0.0279
    epoch 043, train_loss: 0.0420, train_acc: 1.00, valid_loss: 0.2209, valid_acc: 0.88, lr: 9.8103e-04, et: 0.0289
    epoch 044, train_loss: 0.0478, train_acc: 0.99, valid_loss: 0.2598, valid_acc: 0.88, lr: 9.8017e-04, et: 0.0284
    epoch 045, train_loss: 0.0506, train_acc: 0.99, valid_loss: 0.2680, valid_acc: 0.88, lr: 9.7928e-04, et: 0.0285
    epoch 046, train_loss: 0.0479, train_acc: 0.99, valid_loss: 0.2658, valid_acc: 0.88, lr: 9.7838e-04, et: 0.0296
    epoch 047, train_loss: 0.0374, train_acc: 1.00, valid_loss: 0.2626, valid_acc: 0.90, lr: 9.7745e-04, et: 0.0293
    epoch 048, train_loss: 0.0326, train_acc: 1.00, valid_loss: 0.2374, valid_acc: 0.90, lr: 9.7651e-04, et: 0.0288
    epoch 049, train_loss: 0.0331, train_acc: 1.00, valid_loss: 0.2360, valid_acc: 0.90, lr: 9.7555e-04, et: 0.0284
    epoch 050, train_loss: 0.0299, train_acc: 1.00, valid_loss: 0.2097, valid_acc: 0.90, lr: 9.7457e-04, et: 0.0292
    epoch 051, train_loss: 0.0506, train_acc: 0.97, valid_loss: 0.2882, valid_acc: 0.88, lr: 9.7358e-04, et: 0.0298
    epoch 052, train_loss: 0.0533, train_acc: 0.99, valid_loss: 0.3117, valid_acc: 0.88, lr: 9.7256e-04, et: 0.0281
    epoch 053, train_loss: 0.0299, train_acc: 1.00, valid_loss: 0.2328, valid_acc: 0.88, lr: 9.7152e-04, et: 0.0284
    epoch 054, train_loss: 0.0277, train_acc: 1.00, valid_loss: 0.2131, valid_acc: 0.90, lr: 9.7047e-04, et: 0.0291
    epoch 055, train_loss: 0.0286, train_acc: 1.00, valid_loss: 0.2176, valid_acc: 0.90, lr: 9.6940e-04, et: 0.0295
    epoch 056, train_loss: 0.0280, train_acc: 1.00, valid_loss: 0.2085, valid_acc: 0.93, lr: 9.6831e-04, et: 0.0277
    epoch 057, train_loss: 0.0309, train_acc: 1.00, valid_loss: 0.1947, valid_acc: 0.93, lr: 9.6720e-04, et: 0.0278, checkpoint saved
    epoch 058, train_loss: 0.0302, train_acc: 1.00, valid_loss: 0.1637, valid_acc: 0.93, lr: 9.6607e-04, et: 0.0274, checkpoint saved
    epoch 059, train_loss: 0.0280, train_acc: 1.00, valid_loss: 0.1426, valid_acc: 0.93, lr: 9.6492e-04, et: 0.0272, checkpoint saved
    epoch 060, train_loss: 0.0426, train_acc: 1.00, valid_loss: 0.1016, valid_acc: 0.95, lr: 9.6376e-04, et: 0.0279, checkpoint saved
    epoch 061, train_loss: 0.0385, train_acc: 1.00, valid_loss: 0.0965, valid_acc: 0.97, lr: 9.6258e-04, et: 0.0283, checkpoint saved
    epoch 062, train_loss: 0.0213, train_acc: 1.00, valid_loss: 0.1288, valid_acc: 0.95, lr: 9.6138e-04, et: 0.0280
    epoch 063, train_loss: 0.0241, train_acc: 1.00, valid_loss: 0.1843, valid_acc: 0.93, lr: 9.6016e-04, et: 0.0298
    epoch 064, train_loss: 0.0281, train_acc: 1.00, valid_loss: 0.2053, valid_acc: 0.93, lr: 9.5892e-04, et: 0.0282
    epoch 065, train_loss: 0.0265, train_acc: 1.00, valid_loss: 0.2427, valid_acc: 0.93, lr: 9.5766e-04, et: 0.0285
    epoch 066, train_loss: 0.0280, train_acc: 0.99, valid_loss: 0.2609, valid_acc: 0.93, lr: 9.5639e-04, et: 0.0291
    epoch 067, train_loss: 0.0224, train_acc: 1.00, valid_loss: 0.2423, valid_acc: 0.88, lr: 9.5510e-04, et: 0.0288
    epoch 068, train_loss: 0.0156, train_acc: 1.00, valid_loss: 0.2227, valid_acc: 0.90, lr: 9.5379e-04, et: 0.0272
    epoch 069, train_loss: 0.0169, train_acc: 1.00, valid_loss: 0.1925, valid_acc: 0.90, lr: 9.5246e-04, et: 0.0275
    epoch 070, train_loss: 0.0165, train_acc: 1.00, valid_loss: 0.1744, valid_acc: 0.90, lr: 9.5112e-04, et: 0.0285
    epoch 071, train_loss: 0.0183, train_acc: 1.00, valid_loss: 0.1560, valid_acc: 0.93, lr: 9.4975e-04, et: 0.0305
    epoch 072, train_loss: 0.0208, train_acc: 1.00, valid_loss: 0.1629, valid_acc: 0.93, lr: 9.4837e-04, et: 0.0315
    epoch 073, train_loss: 0.0207, train_acc: 1.00, valid_loss: 0.1580, valid_acc: 0.93, lr: 9.4697e-04, et: 0.0306
    epoch 074, train_loss: 0.0168, train_acc: 1.00, valid_loss: 0.2121, valid_acc: 0.90, lr: 9.4556e-04, et: 0.0301
    epoch 075, train_loss: 0.0300, train_acc: 1.00, valid_loss: 0.3191, valid_acc: 0.90, lr: 9.4412e-04, et: 0.0310
    epoch 076, train_loss: 0.0261, train_acc: 1.00, valid_loss: 0.2946, valid_acc: 0.90, lr: 9.4267e-04, et: 0.0303
    epoch 077, train_loss: 0.0193, train_acc: 1.00, valid_loss: 0.2136, valid_acc: 0.93, lr: 9.4120e-04, et: 0.0309
    epoch 078, train_loss: 0.0211, train_acc: 1.00, valid_loss: 0.2163, valid_acc: 0.93, lr: 9.3972e-04, et: 0.0289
    epoch 079, train_loss: 0.0203, train_acc: 1.00, valid_loss: 0.2002, valid_acc: 0.93, lr: 9.3822e-04, et: 0.0292
    epoch 080, train_loss: 0.0219, train_acc: 1.00, valid_loss: 0.1832, valid_acc: 0.90, lr: 9.3669e-04, et: 0.0299
    epoch 081, train_loss: 0.0194, train_acc: 1.00, valid_loss: 0.1491, valid_acc: 0.93, lr: 9.3516e-04, et: 0.0291
    epoch 082, train_loss: 0.0194, train_acc: 1.00, valid_loss: 0.1362, valid_acc: 0.95, lr: 9.3360e-04, et: 0.0297
    epoch 083, train_loss: 0.0179, train_acc: 1.00, valid_loss: 0.1463, valid_acc: 0.95, lr: 9.3203e-04, et: 0.0279
    epoch 084, train_loss: 0.0195, train_acc: 1.00, valid_loss: 0.1985, valid_acc: 0.95, lr: 9.3044e-04, et: 0.0291
    epoch 085, train_loss: 0.0295, train_acc: 0.99, valid_loss: 0.2646, valid_acc: 0.95, lr: 9.2883e-04, et: 0.0290
    epoch 086, train_loss: 0.0230, train_acc: 1.00, valid_loss: 0.2560, valid_acc: 0.93, lr: 9.2721e-04, et: 0.0280
    epoch 087, train_loss: 0.0201, train_acc: 1.00, valid_loss: 0.2425, valid_acc: 0.93, lr: 9.2557e-04, et: 0.0290
    epoch 088, train_loss: 0.0356, train_acc: 0.99, valid_loss: 0.2616, valid_acc: 0.90, lr: 9.2392e-04, et: 0.0288
    epoch 089, train_loss: 0.0412, train_acc: 0.99, valid_loss: 0.3150, valid_acc: 0.90, lr: 9.2224e-04, et: 0.0278
    epoch 090, train_loss: 0.0229, train_acc: 1.00, valid_loss: 0.2350, valid_acc: 0.90, lr: 9.2055e-04, et: 0.0292
    epoch 091, train_loss: 0.0174, train_acc: 1.00, valid_loss: 0.1678, valid_acc: 0.93, lr: 9.1885e-04, et: 0.0290
    epoch 092, train_loss: 0.0175, train_acc: 1.00, valid_loss: 0.1528, valid_acc: 0.93, lr: 9.1712e-04, et: 0.0287
    epoch 093, train_loss: 0.0150, train_acc: 1.00, valid_loss: 0.1735, valid_acc: 0.93, lr: 9.1538e-04, et: 0.0280
    epoch 094, train_loss: 0.0140, train_acc: 1.00, valid_loss: 0.1848, valid_acc: 0.93, lr: 9.1363e-04, et: 0.0285
    epoch 095, train_loss: 0.0131, train_acc: 1.00, valid_loss: 0.2083, valid_acc: 0.93, lr: 9.1185e-04, et: 0.0288
    epoch 096, train_loss: 0.0137, train_acc: 1.00, valid_loss: 0.2258, valid_acc: 0.90, lr: 9.1007e-04, et: 0.0285
    epoch 097, train_loss: 0.0156, train_acc: 1.00, valid_loss: 0.2380, valid_acc: 0.90, lr: 9.0826e-04, et: 0.0288
    epoch 098, train_loss: 0.0167, train_acc: 1.00, valid_loss: 0.2385, valid_acc: 0.88, lr: 9.0644e-04, et: 0.0291
    epoch 099, train_loss: 0.0144, train_acc: 1.00, valid_loss: 0.2197, valid_acc: 0.88, lr: 9.0460e-04, et: 0.0290
    epoch 100, train_loss: 0.0135, train_acc: 1.00, valid_loss: 0.2133, valid_acc: 0.88, lr: 9.0275e-04, et: 0.0281
    epoch 101, train_loss: 0.0135, train_acc: 1.00, valid_loss: 0.2112, valid_acc: 0.90, lr: 9.0088e-04, et: 0.0293
    epoch 102, train_loss: 0.0137, train_acc: 1.00, valid_loss: 0.2160, valid_acc: 0.90, lr: 8.9900e-04, et: 0.0290
    epoch 103, train_loss: 0.0159, train_acc: 1.00, valid_loss: 0.2262, valid_acc: 0.88, lr: 8.9710e-04, et: 0.0290
    epoch 104, train_loss: 0.0144, train_acc: 1.00, valid_loss: 0.2034, valid_acc: 0.88, lr: 8.9518e-04, et: 0.0281
    epoch 105, train_loss: 0.0144, train_acc: 1.00, valid_loss: 0.2031, valid_acc: 0.88, lr: 8.9325e-04, et: 0.0299
    epoch 106, train_loss: 0.0161, train_acc: 1.00, valid_loss: 0.2447, valid_acc: 0.88, lr: 8.9130e-04, et: 0.0289
    epoch 107, train_loss: 0.0168, train_acc: 1.00, valid_loss: 0.2577, valid_acc: 0.90, lr: 8.8934e-04, et: 0.0280
    epoch 108, train_loss: 0.0130, train_acc: 1.00, valid_loss: 0.2232, valid_acc: 0.90, lr: 8.8736e-04, et: 0.0288
    epoch 109, train_loss: 0.0133, train_acc: 1.00, valid_loss: 0.1888, valid_acc: 0.90, lr: 8.8537e-04, et: 0.0291
    epoch 110, train_loss: 0.0127, train_acc: 1.00, valid_loss: 0.1772, valid_acc: 0.93, lr: 8.8336e-04, et: 0.0287
    epoch 111, train_loss: 0.0127, train_acc: 1.00, valid_loss: 0.1801, valid_acc: 0.93, lr: 8.8134e-04, et: 0.0285
    epoch 112, train_loss: 0.0110, train_acc: 1.00, valid_loss: 0.1915, valid_acc: 0.93, lr: 8.7930e-04, et: 0.0282
    epoch 113, train_loss: 0.0131, train_acc: 1.00, valid_loss: 0.2018, valid_acc: 0.93, lr: 8.7725e-04, et: 0.0289
    epoch 114, train_loss: 0.0114, train_acc: 1.00, valid_loss: 0.1847, valid_acc: 0.93, lr: 8.7518e-04, et: 0.0290
    epoch 115, train_loss: 0.0112, train_acc: 1.00, valid_loss: 0.1636, valid_acc: 0.93, lr: 8.7310e-04, et: 0.0278
    epoch 116, train_loss: 0.0128, train_acc: 1.00, valid_loss: 0.1353, valid_acc: 0.95, lr: 8.7100e-04, et: 0.0287
    epoch 117, train_loss: 0.0153, train_acc: 1.00, valid_loss: 0.1250, valid_acc: 0.95, lr: 8.6889e-04, et: 0.0293
    epoch 118, train_loss: 0.0159, train_acc: 1.00, valid_loss: 0.1214, valid_acc: 0.97, lr: 8.6676e-04, et: 0.0291
    epoch 119, train_loss: 0.0161, train_acc: 1.00, valid_loss: 0.1232, valid_acc: 0.97, lr: 8.6462e-04, et: 0.0296
    epoch 120, train_loss: 0.0152, train_acc: 1.00, valid_loss: 0.1333, valid_acc: 0.95, lr: 8.6246e-04, et: 0.0306
    epoch 121, train_loss: 0.0133, train_acc: 1.00, valid_loss: 0.1516, valid_acc: 0.93, lr: 8.6029e-04, et: 0.0323
    epoch 122, train_loss: 0.0117, train_acc: 1.00, valid_loss: 0.1511, valid_acc: 0.93, lr: 8.5811e-04, et: 0.0317
    epoch 123, train_loss: 0.0113, train_acc: 1.00, valid_loss: 0.1714, valid_acc: 0.93, lr: 8.5591e-04, et: 0.0312
    epoch 124, train_loss: 0.0125, train_acc: 1.00, valid_loss: 0.1712, valid_acc: 0.90, lr: 8.5370e-04, et: 0.0321
    epoch 125, train_loss: 0.0350, train_acc: 1.00, valid_loss: 0.2994, valid_acc: 0.85, lr: 8.5147e-04, et: 0.0306
    epoch 126, train_loss: 0.0360, train_acc: 1.00, valid_loss: 0.3004, valid_acc: 0.85, lr: 8.4923e-04, et: 0.0297
    epoch 127, train_loss: 0.0229, train_acc: 1.00, valid_loss: 0.2489, valid_acc: 0.90, lr: 8.4698e-04, et: 0.0295
    epoch 128, train_loss: 0.0139, train_acc: 1.00, valid_loss: 0.2151, valid_acc: 0.93, lr: 8.4471e-04, et: 0.0294
    epoch 129, train_loss: 0.0128, train_acc: 1.00, valid_loss: 0.2176, valid_acc: 0.93, lr: 8.4243e-04, et: 0.0302
    epoch 130, train_loss: 0.0136, train_acc: 1.00, valid_loss: 0.2251, valid_acc: 0.90, lr: 8.4014e-04, et: 0.0281
    epoch 131, train_loss: 0.0147, train_acc: 1.00, valid_loss: 0.2264, valid_acc: 0.90, lr: 8.3783e-04, et: 0.0287
    epoch 132, train_loss: 0.0124, train_acc: 1.00, valid_loss: 0.1960, valid_acc: 0.90, lr: 8.3551e-04, et: 0.0298
    epoch 133, train_loss: 0.0135, train_acc: 1.00, valid_loss: 0.2008, valid_acc: 0.88, lr: 8.3317e-04, et: 0.0289
    epoch 134, train_loss: 0.0155, train_acc: 1.00, valid_loss: 0.1960, valid_acc: 0.88, lr: 8.3083e-04, et: 0.0288
    epoch 135, train_loss: 0.0149, train_acc: 1.00, valid_loss: 0.2062, valid_acc: 0.88, lr: 8.2846e-04, et: 0.0294
    epoch 136, train_loss: 0.0128, train_acc: 1.00, valid_loss: 0.2071, valid_acc: 0.90, lr: 8.2609e-04, et: 0.0302
    Early stopping was triggered: epoch #137
    Elapsed Time: 4.59s
    keywords_train                                           [run:1, run:2]
    keywords_valid                                                  [run:3]
    keywords_test                                                     run:4
    classifier                                                    eegnet4.2
    accuracy                                                            1.0
    labels                [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, ...
    preds                 [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, ...
    probas                [[0.03796487, 0.9620352], [0.9995403, 0.000459...
    logits                [[-1.9252256, 1.3071641], [3.8360136, -3.84838...
    desc                                           eegnet4.2/drop_prob=0.25
    normalization_mean    [-2.3615324294836586e-09, -2.639076960061989e-...
    normalization_std     [5.420392625839235e-06, 5.727636352954266e-06,...
    Name: 0, dtype: object





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 7.660 seconds)


.. _sphx_glr_download_auto_examples_example_within-subject-classification-deeplearning.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_within-subject-classification-deeplearning.ipynb <example_within-subject-classification-deeplearning.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_within-subject-classification-deeplearning.py <example_within-subject-classification-deeplearning.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: example_within-subject-classification-deeplearning.zip <example_within-subject-classification-deeplearning.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
